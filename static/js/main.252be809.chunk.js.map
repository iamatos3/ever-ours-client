{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/events/Home.js","api/events.js","components/events/Event.js","components/events/EventForm.js","components/events/EventCreate.js","components/events/EventEdit.js","components/events/Events.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","indexEvents","get","showEvent","deleteEvent","updateEvent","title","capacity","attire","createEvent","Event","setEvent","deleted","setDeleted","useParams","fetchData","handleDeleteClick","onClick","Spinner","animation","role","EventForm","handleSubmit","setTitle","setLocation","setCapacity","setAttire","EventCreate","createdId","setCreatedId","_id","EventEdit","updated","setUpdated","Events","events","setEvents","length","eventsList","map","App","msgAlerts","setMsgAlerts","uuid","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.252be809.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/events' className='nav-link'>Events</NavLink>\n    <NavLink to='/events/create' className='nav-link'>Create An Event</NavLink>\n\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Ever Ours</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://dry-island-85955.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async (user) => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut(user)\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\n\nconst Home = () => (\n  <>\n    <h4>Looking for a wedding to attend? Come on in and RSVP!</h4>\n  </>\n)\n\nexport default Home\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// INDEX\nexport const indexEvents = (user) => {\n  return axios.get(apiUrl + '/events/',\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\n// SHOW\nexport const showEvent = (id, user) => {\n  return axios.get(`${apiUrl}/events/${id}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE\nexport const deleteEvent = (id, user) => {\n  return axios.delete(`${apiUrl}/events/${id}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// UPDATE\nexport const updateEvent = (id, title, location, capacity, attire, user) => {\n  return axios.patch(\n    `${apiUrl}/events/${id}`,\n    { event: { title, location, capacity, attire } },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\n// CREATE\nexport const createEvent = (title, location, capacity, attire, user) => {\n  return axios.post(\n    `${apiUrl}/events/`,\n    { event: { title, location, capacity, attire } },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, Navigate, useParams } from 'react-router-dom'\nimport { Spinner, Button } from 'react-bootstrap'\n\nimport { deleteEvent, showEvent } from '../../api/events'\n\nconst Event = ({ user, msgAlert }) => {\n  const [event, setEvent] = useState(null)\n  const [deleted, setDeleted] = useState(false)\n  const { id } = useParams()\n\n  // If the user is null then redirect to the Home page\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await showEvent(id, user)\n        setEvent(res.data.event)\n      } catch (error) {\n        msgAlert({\n          heading: 'Event failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleDeleteClick = async () => {\n    try {\n      await deleteEvent(id, user)\n      setDeleted(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to delete the event',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // If event is null then we are loading\n  if (!event) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  } else if (deleted) {\n    return <Navigate to='/events/' />\n  } else {\n    // We have an event to display\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>{event.title}</h3>\n          <p>Location: {event.location}</p>\n          <p>Capacity: {event.capacity}</p>\n          <p>Attire: {event.attire}</p>\n          <Button variant='danger' onClick={handleDeleteClick}>Delete Event</Button>\n          <Link to={`/events/${id}/edit`}>\n            <Button variant='primary' type='submit'>Update Event</Button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Event\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst EventForm = ({ handleSubmit, title, location, setTitle, setLocation, capacity, setCapacity, attire, setAttire, user }) => (\n  <Form onSubmit={(event) => handleSubmit(event, user)}>\n    <Form.Group controlId='title'>\n      <Form.Label>Title</Form.Label>\n      <Form.Control\n        placeholder='A Perfect Event'\n        name='title'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='location'>\n      <Form.Label>Location</Form.Label>\n      <Form.Control\n        placeholder='Location/Destination'\n        name='location'\n        value={location}\n        onChange={event => setLocation(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='capacity'>\n      <Form.Label>Capacity</Form.Label>\n      <Form.Control\n        placeholder='Capacity'\n        name='capacity'\n        value={capacity}\n        onChange={event => setCapacity(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='attire'>\n      <Form.Label>Attire</Form.Label>\n      <Form.Control\n        placeholder='Attire'\n        name='attire'\n        value={attire}\n        onChange={event => setAttire(event.target.value)}\n      />\n    </Form.Group>\n\n    <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n  </Form>\n)\n\nexport default EventForm\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\n// Import EventForm:\nimport EventForm from './EventForm'\nimport { createEvent } from '../../api/events'\n\nconst EventCreate = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [location, setLocation] = useState('')\n  const [capacity, setCapacity] = useState('')\n  const [attire, setAttire] = useState('')\n  const [createdId, setCreatedId] = useState(null)\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await createEvent(title, location, capacity, attire, user)\n      setCreatedId(res.data.event._id)\n      console.log(res.data.event._id)\n\n      msgAlert({\n        heading: 'Event Created',\n        message: `Created ${title} successfully!`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to create Event',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // If user is null - Re-direct to Home Page\n  if (!user) {\n    return <Navigate to='/' />\n  } else if (createdId) {\n    // If event has been created - Navigate to the Show Page\n    return <Navigate to={`/events/${createdId}`}/>\n  }\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Event</h3>\n        <EventForm\n          handleSubmit={handleSubmit}\n          title={title}\n          location={location}\n          capacity={capacity}\n          attire={attire}\n          setTitle={ setTitle }\n          setLocation={ setLocation }\n          setCapacity={ setCapacity }\n          setAttire={ setAttire }\n          user={user}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EventCreate\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport EventForm from './EventForm'\nimport { showEvent, updateEvent } from '../../api/events'\n\nconst EventEdit = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [location, setLocation] = useState('')\n  const [capacity, setCapacity] = useState('')\n  const [attire, setAttire] = useState('')\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams()\n\n  // If user is null - Re-direct to Home Page\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await showEvent(id, user)\n        setTitle(res.data.event.title)\n        setLocation(res.data.event.location)\n      } catch (error) {\n        msgAlert({\n          heading: 'Failed to load Event',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      await updateEvent(id, title, location, capacity, attire, user)\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to update event',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (updated) {\n    // Navigate to the Show Page\n    return <Navigate to={`/events/${id}`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Edit Event</h3>\n        <EventForm\n          handleSubmit={handleSubmit}\n          title={title}\n          location={location}\n          capacity={capacity}\n          attire={attire}\n          setTitle={setTitle}\n          setLocation={setLocation}\n          setCapacity={setCapacity}\n          setAttire={setAttire}\n          user={user}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EventEdit\n","import React, { useEffect, useState } from 'react'\nimport { Link, Navigate } from 'react-router-dom'\n\nimport { Spinner } from 'react-bootstrap'\nimport { indexEvents } from '../../api/events'\n\nconst Events = ({ user, msgAlert }) => {\n  const [events, setEvents] = useState(null)\n\n  // If user is null - Re-direct to Home Page\n  // Note: Must check before useEffect since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  // Run once when the component mounts\n  useEffect(() => {\n    const fetchData = async (user) => {\n      try {\n        const res = await indexEvents(user)\n        setEvents(res.data.events)\n      } catch (error) {\n        msgAlert({\n          heading: 'Events List failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData(user)\n  }, [])\n\n  // Three States:\n  if (!events) {\n    // If event is `null` we are loading\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  } else if (events.length === 0) {\n    // If the array of Events is empty - We have no events to show\n    return <h1>No Events yet, please create one!</h1>\n  } else {\n    // Otherwise, display the events\n    const eventsList = events.map(event => (\n      <li key={event._id}>\n        <Link to={`/events/${event._id}`}>{event.title}</Link>\n      </li>\n    ))\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>Events</h3>\n          <ul>{eventsList}</ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Events\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\n// AUTH\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\n// EVENT Components\nimport Home from './components/events/Home'\nimport Event from './components/events/Event'\nimport EventCreate from './components/events/EventCreate'\nimport EventEdit from './components/events/EventEdit'\nimport Events from './components/events/Events'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n\n          {/* EVENT Routes */}\n          <Route path='/'\n            element={<Home />} />\n          <Route path='/events' element={<Events msgAlert={msgAlert} user={user} />} />\n          <Route path='/events/:id' element={<Event msgAlert={msgAlert} user={user} />} />\n          <Route path='/events/create' element={<EventCreate msgAlert={msgAlert} user={user} />} />\n          <Route path='/events/:id/edit' element={<EventEdit msgAlert={msgAlert} user={user} />} />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}